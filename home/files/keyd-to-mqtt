#!/usr/bin/env python3

from asyncio_mqtt import Client
import asyncio
import collections


async def main():
    proc = await asyncio.create_subprocess_exec(
        "/home/tris/.nix-profile/bin/keyd", "listen", stdout=asyncio.subprocess.PIPE
    )

    assert proc.stdout is not None

    layers = collections.Counter()

    async with Client("localhost") as mqtt:
        while True:
            line = await proc.stdout.readline()
            if not line:
                return

            line = line.decode().strip()

            if not line:
                continue

            op, layer = line[0], line[1:]
            print(op, layer)
            if layer in {"shift", "meta", "control", "alt"}:
                continue

            if op == "+":
                layers[layer] += 1
            else:
                layers[layer] -= 1

            if layers[layer] < 0:
                layers[layer] = 0

            new_layers = dict(layers)
            if new_layers.get("macro", 0) > 0:
                new_layers["premacro"] = 0

            await mqtt.publish(
                "keyd-layers", " ".join(sorted([x for x, v in new_layers.items() if v > 0])) or "none"
            )


def sync_main():
    asyncio.run(main())


if __name__ == "__main__":
    sync_main()

# vim: ft=python
